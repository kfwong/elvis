group 'com.kfwong.elvis'
version '1.3.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.4-2'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'com.github.kittinunf.fuel:fuel:1.9.0'
    compile 'com.github.kittinunf.fuel:fuel-gson:1.9.0'
    compile 'no.tornado:tornadofx:1.7.9'
    compile 'com.google.guava:guava:23.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'org.kordamp.ikonli:ikonli-javafx:1.9.0'
    compile 'org.kordamp.ikonli:ikonli-fontawesome-pack:1.9.0'

    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile 'io.kotlintest:kotlintest:2.0.5'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.kfwong.elvis.MainKt'
        )

    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

}